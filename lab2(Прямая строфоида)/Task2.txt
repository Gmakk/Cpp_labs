Требования:

1) Проект на git'е. (обязательно)

2) Разработка через тестирование (TDD), полное покрытие методов класса модульными тестами (обязательно)

3) Иcпользование gtest или аналогов (для VS2019 тип проекта Google Test (рекомендуется) либо внешния библиотека тестирования, возможно использовать Native Unit Test Project) (обязательно)

4) Корректно спроектированный класс, отсутсвие избыточности в состоянии, корректная сигнатура методов, обработка ошибочных ситуаций и т.п. (обязательно)

5) Структура решения: проект со статически линкуемой библиотекой с классом, проект консольного приложения для диалоговой отладки, проект для модульного тестирования. (обязательно)

6) Статический анализ кода, встроенный инструментарий в IDE (пр. VS2019: Analyze->Run Code Analysis, см.  также Project -> Properties -> Configuration Properties -> Code Analysis -> Microsoft -> Active Rules) или внешние инструменты (Sonarqube + extensions, Clang Static Analyzer и д.р.) (обязательно знакомство с инструментом, все исправлять не надо, т.к. некоторые вещи просто нельзя исправить без использования STL)

7) Стандарт языка C++17 (рекомендуется), С++20 (при наличии). Допустим C++11 или С++14 (если почему-то нет С++17)

8) Плюс все то, что применимо из задачи №1


Вариант 1

Вариант 1. Прямая строфоида

Разработать класс, определяющий кривую – прямую строфоиду.

Прямая строфоида определятся следующим образом: в декартовой системе координат на оси OX выбирается точка A. Через нее проводится произвольная прямая AL, пересекающая ось OY в точке P. На AL откладываются отрезки PM1 и PM2, равные OP. Прямая строфоида есть геометрическое место точек M1, M2.

1) Определить состояние класса.

2) Разработать необходимые конструкторы и методы получения и изменения параметров, определяющих кривую.

3) Вернуть координату y в декартовой системе координат, принадлежащую строфоиде в зависимости от x.

4) Вернуть расстояние до центра в полярной системе координат в зависимости от угла.

5) Вернуть радиус кривизны в узловой точке.

6) Вернуть площадь петли AOM1.

7) Вернуть объем тела, произведенного вращением петли около оси OX.

8) Вернуть площадь между ветвями OU’, OV’ и асимптотой.

Разработать диалоговую программу для тестирования класса.